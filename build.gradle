buildscript {
	repositories {
		jcenter();
		mavenCentral();
	}

	dependencies { classpath 'me.tatarka:gradle-retrolambda:3.2.5' }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'eclipse'

repositories {
	jcenter();
	mavenCentral();
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

retrolambda { javaVersion JavaVersion.VERSION_1_7 }

group = 'net.epsilony.mongo'
ext._version = '0.1.0.4'

version=_version

eclipse{ classpath{ downloadJavadoc = true } }

dependencies{
	compile "org.slf4j:slf4j-api:1.7.21"
	compile "ch.qos.logback:logback-classic:1.1.3"
	compile 'com.google.guava:guava:19.0'
	compile 'org.mongodb:mongodb-driver:3.2.2'
	compile 'org.mongodb:mongodb-driver-async:3.2.2'
	compile 'net.openhft:compiler:2.2.5'
	compile 'org.freemarker:freemarker:2.3.25-incubating'

	compile 'net.sourceforge.streamsupport:streamsupport:1.5'
	compile 'net.sourceforge.streamsupport:streamsupport-cfuture:1.5'
	compile 'net.sourceforge.streamsupport:streamsupport-atomic:1.5'
	compile 'net.sourceforge.streamsupport:streamsupport-flow:1.5'
	compile 'net.sourceforge.streamsupport:streamsupport-literal:1.5'

	testCompile "org.mockito:mockito-all:1.9.5"
	testCompile "junit:junit:4.12"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {	
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	configurations = ['archives']
	pkg {
		repo = 'maven'
		name = 'meta-mongo-codec'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/epsilony/meta-mongo-codec'
		publish = true
	}
}

